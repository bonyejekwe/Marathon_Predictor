#https://aidanrussellcom.wordpress.com/2019/01/14/pystan-tutorial-1/

# TODO try larger dataset

# # Here: run from R file to populate /stan_results

# rs_results1: no propleft:  finish ~ N(alpha + beta * feats, sigma);
# rs_result1a: feats = [total_pace]
# rs_result1b: feats = [total_pace, curr_pace]
# rs_result1c: feats = [total_pace, prop]
# rs_result1d: feats = [total_pace, curr_pace, prop]

# rs_results2: propleft:  finish ~ N(alpha + beta * feats, sigma * propleft);
# rs_result2a: feats = [total_pace]
# rs_result2b: feats = [total_pace, curr_pace]
# rs_result2c: feats = [total_pace, prop]
# rs_result2d: feats = [total_pace, curr_pace, prop]

# rs_results3: additional features:  finish ~ N(alpha + beta * feats, sigma * propleft);
# rs_result3a: feats = [total_pace, curr_pace, prop, propxcurr]
# rs_result3b: feats = [total_pace, curr_pace, prop, propxcurr, male]
# rs_result3c: feats = [total_pace, curr_pace, prop, propxcurr, age]
# rs_result3c: feats = [total_pace, curr_pace, prop, propxcurr, male, age]
# ...

2d1: train=10; time=53s
2d2: train=100; time=88s
2d3: train=1000; time=853s
2d4: train=256; time=201s
2d5: train=512; time=392s



model_info = {
    # "rstan1a" : ("stan_results/rs_result1a.csv", ["total_pace"], ["beta[1]"], False),
    # "rstan1b" : ("stan_results/rs_result1b.csv", ["total_pace", "curr_pace"], ["beta[1]", "beta[2]"], False),
    # "rstan1c" : ("stan_results/rs_result1c.csv", ["total_pace", "prop"],  ["beta[1]", "beta[2]"], False),
    # "rstan1d" : ("stan_results/rs_result1d.csv", ["total_pace", "curr_pace", "prop"], ["beta[1]", "beta[2]", "beta[3]"], False),
    # "rstan2a" : ("stan_results/rs_result2a.csv", ["total_pace"], ["beta[1]"], True),
    # "rstan2b" : ("stan_results/rs_result2b.csv", ["total_pace", "curr_pace"],  ["beta[1]", "beta[2]"], True),
    
    (now params_bos0c) # "rstan2c" : ("stan_results/rs_result2c.csv", ["total_pace", "prop"], ["beta[1]", "beta[2]"], True),
    (now params_bos0d) # "rstan2d" : ("stan_results/rs_result2d.csv", ["total_pace", "curr_pace", "prop"], ["beta[1]", "beta[2]", "beta[3]"], True),

    # "rstan3a" : ("stan_results/rs_result3a.csv", ["total_pace", "curr_pace", "prop", "propxcurr"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]"], True),
    # "rstan3b" : ("stan_results/rs_result3b.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan3c" : ("stan_results/rs_result3c.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "age"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan3d" : ("stan_results/rs_result3d.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male", "age"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]", "beta[6]"], True),
    # "rstan3e" : ("stan_results/rs_result3e.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male", "age", "malexage"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]", "beta[6]", "beta[7]"], True),
    # "rstan2d2" : ("stan_results/rs_result2d2.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan2d3" : ("stan_results/rs_result2d3.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan2d4" : ("stan_results/rs_result2d4.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan2d5" : ("stan_results/rs_result2d5.csv", ["total_pace", "curr_pace", "prop", "propxcurr", "male"], ["beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]"], True),
    # "rstan2dx" : ("stan_results/rs_result2dx.csv", ["total_pace", "curr_pace", "prop"], ["beta[1]", "beta[2]", "beta[3]"], True),
    # "rstan2dy" : ("stan_results/rs_result2dy.csv", ["total_pace", "curr_pace", "prop"], ["beta[1]", "beta[2]", "beta[3]"], True),
    # "rstan2dz" : ("stan_results/rs_result2dz.csv", ["total_pace", "curr_pace", "prop"], ["beta[1]", "beta[2]", "beta[3]"], True),
}